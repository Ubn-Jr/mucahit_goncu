package main

import "fmt"

func main() {
	var classStudents [3][10]string = [3][10]string{{"ali", "ahmet", "mehmet", "can", "cengiz", "polat", "memati", "abdulhey", "erhan", "süleyman"}, {"acun", "adem", "adnan", "arda", "alperen", "ata", "aykut", "ceyhun", "kılıç", "demir"}, {"batu", "bahadır", "mehmet", "barış", "savaş", "burak", "bülent", "yılmaz", "caner", "cüneyt"}}
	var classstudentNotes [3][10]int = [3][10]int{{56, 43, 75, 32, 45, 99, 97, 67, 35, 89}, {73, 89, 45, 98, 5, 97, 97, 23, 35, 45}, {26, 48, 79, 89, 90, 97, 97, 67, 53, 100}}

	studentGradeEvaluation := studentGradeEvaluationFunc(classStudents, classstudentNotes)

	if studentGradeEvaluation > 0 {
		fmt.Println("Most successful class", studentGradeEvaluation)
	} else {
		fmt.Println("No successful class")
	}

}
func studentGradeEvaluationFunc(classStudents [3][10]string, studentNotes [3][10]int) int {
	var classNumberOfAchievements [3]int = [3]int{0, 0, 0}

	fmt.Println("Evaluation started")
	veryGoodStudents := 0
	classNumber := 0

	for i := 0; i < len(classStudents); i++ {
		classNumber++
		veryGoodStudents = 0

		fmt.Println("class", classNumber)
		for j := 0; j < len(classStudents[0]); j++ {
			studentGrade := studentNotes[i][j]

			if 85 < studentGrade {
				veryGoodStudents++
				fmt.Println(classStudents[i][j], studentGrade, "passed very good")

			} else if 85 >= studentGrade && studentGrade >= 50 {
				fmt.Println(classStudents[i][j], studentGrade, "passed the exam")

			} else {
				fmt.Println(classStudents[i][j], studentGrade, "failed the exam")

			}

		}
		fmt.Println("veryGoodStudents", veryGoodStudents)
		classNumberOfAchievements[i] = veryGoodStudents
	}
	var successfulClass int = mostSuccessfulClass(classNumberOfAchievements)
	fmt.Println("Evaluation is over")
	return successfulClass
}
func mostSuccessfulClass(classNumberOfAchievements [3]int) int {
	var mostSuccessfulSlassNumberOfSuccessfulStudents int = 0
	successfulClass := 0

	for i := 0; i < len(classNumberOfAchievements); i++ {

		if mostSuccessfulSlassNumberOfSuccessfulStudents < classNumberOfAchievements[i] {
			mostSuccessfulSlassNumberOfSuccessfulStudents = classNumberOfAchievements[i]
			successfulClass = i + 1

		}
	}

	return successfulClass

}
